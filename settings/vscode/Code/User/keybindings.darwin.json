// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "cursorRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+f",
        "command": "cursorWordRight",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+shift+f",
        "command": "cursorWordRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+b",
        "command": "cursorLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "cursorLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+b",
        "command": "cursorWordLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+shift+b",
        "command": "cursorWordLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+p",
        "command": "cursorUp",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+p",
        "command": "repl.action.historyPrevious",
        "when": "editorTextFocus && inDebugRepl && onFirsteDebugReplLine"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+p",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "search.action.focusSearchFromResults",
        "when": "firstMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+p",
        "command": "search.focus.previousInputBox",
        "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
    },
    {
        "key": "ctrl+p",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+shift+p",
        "command": "cursorUpSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "cursorDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "repl.action.historyNext",
        "when": "editorTextFocus && inDebugRepl && onLastDebugReplLine"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+n",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "search.focus.nextInputBox",
        "when": "inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+n",
        "command": "settings.action.focusSettingsFile",
        "when": "inSettingsSearch"
    },
    {
        "key": "ctrl+n",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+shift+n",
        "command": "cursorDownSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "cursorHomeSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "cursorEndSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "home",
        "command": "cursorTop",
        "when": "editorTextFocus"
    },
    {
        "key": "end",
        "command": "cursorBottom",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+home",
        "command": "cursorTopSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+end",
        "command": "cursorBottomSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+a",
        "command": "editor.action.selectAll"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.quickOpenNavigatePrevious"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "alt+n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "shift+alt+n",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "cmd+k cmd+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "cmd+k cmd+f",
        "command": "actions.find"
    },
    {
        "key": "cmd+k cmd+shift+f",
        "command": "workbench.action.findInFiles"
    },
    // {
    //     "key": "alt+shift+s",
    //     "command": "workbench.action.findInFilesWithSelectedText",
    //     "when": "editorFocus"
    // },
    {
        "key": "cmd+k cmd+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+k i",
        "command": "editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.joinLines"
    },
    {
        "key": "shift+cmd+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+d",
        "command": "deleteWordRight",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+.",
        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+;",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+shift+g",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+.",
        "command": "extension.jumpy-word",
        "when": "editorTextFocus"
    },
    {
        "key": "Escape",
        "command": "extension.jumpy-exit",
        "when": "editorTextFocus && jumpy.isJumpyMode"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.increaseViewSize",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.decreaseViewSize",
        "when": "editorTextFocus"
    }
]